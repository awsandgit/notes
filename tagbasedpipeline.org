* TagBased-AWS-CodePipeline

** Requirements
- AWS codepipeline
  - codecommit as source

** On the AWS EventBridge Console:
- Disable the default codepipeline rule on AWS EventBridge Console
- [[file:./images/eventbridge4_resized.png]]
- Create a new AWS EventBridge Rule using the below code:
#+begin_src json
{
  "source": ["aws.codecommit"],
  "detail-type": ["CodeCommit Repository State Change"],
  "resources": ["arn:aws:codecommit:us-east-1:418022186671:test-repo"],
  "detail": {
    "event": ["referenceCreated", "referenceUpdated"],
    "repositoryName": ["test-repo"],
    "referenceType": ["tag"],
    "referenceName": ["dev1", "dev2", "test1", "test2", "version1.0", "version1.1"]
  }
}
#+end_src
- Change the region code, accountID and repositoryName accordingly
- [[file:./images/eventbridge1_resized.png]]
- select other
- [[file:./images/eventbridge2_resized.png]]
- select custom json and paste the above provided code with your changes
- [[file:./images/eventbridge3_resized.png]]
- Use AWS code-pipeline ARN in the target
- [[file:./images/eventbridge5_resized.png]]


** Create a tag using git cli
#+begin_src bash

#create a commit after making changes
git add .
git commit -m "somechanges"

#set a tag for that commit using the commitHash
git tag version1 4a5b5d8

#push the tag
git push origin version1

#verify in the log and on the codecommit console as well
git log -1
#+end_src
