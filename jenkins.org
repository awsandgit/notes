* Jenkins

** Installation:
- Refer to [[https://www.jenkins.io/doc/book/installing/][this document]] for latest info.
- Make sure you have java installed on the instance, officially these versions:
  - openjdk-11-jdk/jre
  - openjdk-17-jdk/jre

*** On Linux:
+ Ubuntu:
#+begin_src bash
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \
  /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins

#check status
systemctl status jenkins

#copy the first time password printed in the output

#use this password when you go to http://<server-ip>:8080 or localhost:8080
#you can also find the password at /var/lib/jenkins/secrets/initialAdminPassword
#+end_src

** Configuring email alerts:
*** Requirements
+ SMTP Server configured and running, OR,
+ Organizational Gmail Account:
  - with less secure apps allowed. Follow this [[https://myaccount.google.com/lesssecureapps][link]].
  - 2 Factor Auth disabled

*** To configure a SMTP server for testing
+ Install docker on your Jenkins Instance. Use this [[https://docs.docker.com/engine/install/ubuntu/][link]].
+ Pull this image from docker. Refer to [[https://hub.docker.com/r/mailhog/mailhog/][this]].
  #+begin_src bash
  docker pull mailhog/mailhog
  # to run the container
  docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog
  #+end_src
+ Check your instance-ip on port 8025. http:://instance-ip:8025
+ You will see a mailhog dashboard. Your mails will come here.

*** On Jenkins Dashboard
+ Go to "Manage Jenkins" > "System"
+ Scroll to Email-Extended Notification
+ Add your instance-ip where mailhog is running
+ Use 1025 as smtp-port value
+ Tick the USE SSL checkbox
+ Save

*** Create a test Pipeline
+ In the script, after stage add this section:
#+begin_src groovy
    post {
        failure {
        emailext body: '''Hi,
                            I have failed you!!
                            Check $BUILD_ID
                            "${JOB_NAME}"
                            $BUILD_URL
        Jenkins-slave''', subject: "Job failed: ${currentBuild.fullDisplayName}", to: 'fuc496k@gmail.com'
        }
    }
#+end_src
  - This functions executes after all stages are done, in this case an email will be sent when the pipeline fails.

+ Sample post function below
#+begin_src groovy
    post {
        always {
            echo 'One way or another, I have finished'
            deleteDir() /* clean up our workspace */
        }
        success {
            echo 'I succeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
#+end_src

+ Official documentation [[https://www.jenkins.io/doc/pipeline/tour/post/][here]]

*** Sample test pipeline that sends logs of the build with the email when it fails:
#+begin_src groovy
pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo "Hello World"
                echo "This pipeline will fail due to the statement below"
                exit 1
            }
        }
    }
    post {
        success {
            echo 'I succeeded!'
        }
        failure {
        emailext attachLog:true,
            body: '''Hi,
                            This Job has failed.
                            Please check $BUILD_URL
        ''', subject: "Job failed: ${currentBuild.fullDisplayName}", to: 'recepient@gmail.com'
        }
    }
}
#+end_src

** Using AWS SES with Jenkins for alert transmission:
- Both the sender and receivers email-ids must be verified on SES.
*** On AWS console
+ Go to SES dashboard
+ Create verified entity using an email.
+ Check your email and verify
+ Generate SMTP Credentials and download those creds.
+ Note down the SES endpoint.

*** On Jenkins Dashboard
+ Go to "Manage Jenkins" > "System"
+ Scroll to Email-Extended Notification
+ Add your SES Endpoint in SMTP SERVER field and add the creds you downloaded(Username:Access Key, Password:Secret Key)
+ Use 465 as smtp-port value
+ Tick the USE SSL checkbox
+ Also Look for System-admin-email field and add the sender email there. It must be already verified on SES.
+ Save

** Using personal Gmail for alerts:
- If you use a personal gmail, you can send mails to anyone without the need of verification.
*** On your gmail account:
+ Enable 2 Factor Authentication(2FA) if not already enabled.
+ Go to the 2FA dashboard from Manage your Google Account > Under Security
+ Scroll Down and look for App passwords
+ Generate an app password by selecting the "OTHERS" category
+ Note down that password(includes spaces)

*** On Jenkins Dashboard
+ Go to "Manage Jenkins" > "System"
+ Scroll to Email-Extended Notification
+ Add "smtp.gmail.com" in SMTP SERVER field and add username:yourgmailid@gmail.com and password that you generated.
+ Use 465 as smtp-port value
+ Tick the USE SSL checkbox
+ Save
